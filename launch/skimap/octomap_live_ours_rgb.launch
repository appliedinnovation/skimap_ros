<!--
    NOTE: this launch file requires installation of:
    * ros-melodic-octomap-server
    * ros-melodic-depth-image-proc
-->

<launch>

  <node pkg="nodelet" type="nodelet" name="standalone_nodelet"  args="manager"/>

  <!--
      Node which registers a depth image to a camera tf frame - REQUIRED FOR XYZRGB
      subscribes:
        rgb/camera_info,
        depth/camera_info,
	depth/image_rect
      publishes:
        depth_registered/camera_info,
        depth_registered/image_rect
  -->
  <node name="depthReg" pkg="nodelet" type="nodelet" args="load depth_image_proc/register standalone_nodelet">
  </node>

  <!--
      Node which converts 2D depth image and RGB into XYZRGB pointcloud
      subscribes:
        rgb/camera_info,
	rgb/image_rect_color,
	depth_registered/image_rect
      publishes:
        depth_registered/camera_info,
	depth_registered/points
      Notes:
        we have to remap the output for octomap.
  -->
  <node name="depthProcRGB" pkg="nodelet" type="nodelet" args="load depth_image_proc/point_cloud_xyzrgb standalone_nodelet">
    <remap from="/depth_registered/points" to="/cloud_in"/>
  </node>

  <!--
      Octomap main mapping node
  -->
  <node name="octomap" output="screen" pkg="octomap_server" type="octomap_server_node">
    <!-- Mapping parameters -->
    <param name="frame_id" value="/odom" />
    <param name="base_frame_id" value="base_footprint" />
    <param name="resolution" value="0.1" />
  </node>

  <node pkg="rviz" type="rviz" output="screen" name="rviz" args="-d $(find skimap_ros)/rviz/octomap_live_ours_rgb.rviz" />

</launch>
